/*
*****************************************************************************
							Workshop 7 part 2
Full Name   : Yukti Manoj Mulani
Student ID# : 156809212
Seneca email: ymulani@myseneca.ca
Date        : July 18, 2022
Authenticity Declaration :
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider.This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

This workshop has contributed a lot towards clearing my concepts on inheritance.
I learned the following concepts in this workshop:-
-Inherit a derived class from a base class
-Shadow a base class member function with a derived class member function
-Access a shadowed member function that is defined in a base class
-Utilize custom input/output operators with these classes

Inheritance enables you to create new classes that reuse, extend, and modify 
the behavior defined in other classes.  A derived class can have only one 
direct base class.The member functions of derived classes are given precedence
over those of base classes. This overshadows the base class member function, 
whose name corresponds to the member function of the derived class.

I also learned that shadowing is mostly done to preserve the identities of your 
classmates. It's possible that a change to the base class will result in the 
creation of an element with the same name as one you've already defined. In 
this scenario, the Shadows modifier compels references inside your class to 
resolve to the member you defined rather than the new base class element.
